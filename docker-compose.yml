version: "3.8"
services:
    db:
        image: postgres:16.2
        container_name: postgres
        # set shared memory limit when using docker-compose
        shm_size: 128mb
        environment:
            POSTGRES_PASSWORD: 123456
            POSTGRES_USER: hiro
            POSTGRES_DB: vcs_msm
        volumes:
            - ./create_table.sql:/docker-entrypoint-initdb.d/create_table.sql

    cache:
        image: redis:7.2
        container_name: redis
    kafka:
        image: bitnami/kafka:3.7.0
        container_name: kafka
        environment:
            - KAFKA_CFG_NODE_ID=0
            - KAFKA_CFG_PROCESS_ROLES=controller,broker
            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
            - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
            - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
            - KAFKA_DEFAULT_REPLICATION_FACTOR=1
            - KAFKA_NUM_PARTITIONS=4
            - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    auth:
        image: auth
        build:
            dockerfile: ./cmd/auth/Dockerfile
        container_name: auth
        restart: always
        env_file:
            - ./cmd/auth/.env
        depends_on:
            - db
    user:
        image: user
        build:
            dockerfile: ./cmd/user/Dockerfile
        container_name: user
        restart: always
        depends_on:
            - db
        env_file:
            - ./cmd/user/.env
    file_server:
        image: file_server
        build:
            dockerfile: ./cmd/file_server/Dockerfile
        container_name: file_server
        env_file:
            - ./cmd/file_server/.env
        restart: always
    exporter:
        image: exporter
        build:
            dockerfile: ./cmd/exporter/Dockerfile
        container_name: exporter
        restart: always
        env_file:
            - ./cmd/exporter/.env
        depends_on:
            - db
            - kafka
            - file_server
    server:
        image: server
        build:
            dockerfile: ./cmd/server/Dockerfile
        container_name: server
        restart: always
        env_file:
            - ./cmd/server/.env
        depends_on:
            - db
            - kafka
            - cache
            - exporter
    health_check:
        image: health_check
        build:
            dockerfile: ./cmd/health_check/Dockerfile
        container_name: health_check
        restart: always
        env_file:
            - ./cmd/health_check/.env
        depends_on:
            - db
            - elastic
    mail_sender:
        image: mail_sender
        build:
            dockerfile: ./cmd/mail_sender/Dockerfile
        container_name: mail_sender
        restart: always
        env_file:
            - ./cmd/mail_sender/.env
        depends_on:
            - db
            - elastic
    gateway:
        image: gateway
        build:
            dockerfile: ./cmd/gateway/Dockerfile
        container_name: gateway
        restart: always
        ports:
            - 3000:3000
        env_file:
            - ./cmd/gateway/.env
        command: ["/bin/gateway", "-create-admin"]
        depends_on:
            - db
            - auth
            - user
            - server
            - file_server
            - mail_sender
            - health_check
    elastic:
        container_name: es-container
        image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
        environment:
            - xpack.security.enabled=false
            - "discovery.type=single-node"
        ports:
            - 9200:9200
        volumes:
            - esdata:/usr/share/elasticsearch/data

    kibana:
        container_name: kb-container
        image: docker.elastic.co/kibana/kibana:8.13.2
        environment:
            - ELASTICSEARCH_HOSTS=http://es-container:9200
        depends_on:
            - elastic
        ports:
            - 5601:5601
volumes:
    esdata:
